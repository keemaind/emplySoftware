<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp">

    <!--#region FocusVisual -->
    <Style x:Key="FocusVisual">

        <Setter Property="Control.Template">

            <Setter.Value>

                <ControlTemplate>

                    <Rectangle Margin="2"
                               StrokeDashArray="1 2"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               SnapsToDevicePixels="true"
                               StrokeThickness="1"/>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>

    <Style x:Key="OptionMarkFocusVisual">

        <Setter Property="Control.Template">

            <Setter.Value>

                <ControlTemplate>

                    <Rectangle Margin="14,0,0,0"
                               StrokeDashArray="1 2"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               SnapsToDevicePixels="true"
                               StrokeThickness="1"/>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>
    <!--#endregion-->

    <!--#region SolidColorBrushes -->
    <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#C6C6C6"/>
    <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#7F7F7F"/>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#F6F6F6"/>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#C6C6C6"/>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#474747"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#F6F6F6"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#7F7F7F"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#474747"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
    <!--#endregion-->

    <!--#region CheckBoxStyle -->
    <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">

        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
        <Setter Property="Foreground" Value="{StaticResource secondary_color_02}"/>
        <Setter Property="FontFamily" Value="/FontTypes/#Montserrat Medium"/>
        <Setter Property="BorderThickness" Value="1"/>

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type CheckBox}">

                    <Grid x:Name="templateRoot"
                          Background="Transparent"
                          SnapsToDevicePixels="True">

                        <Grid.ColumnDefinitions>

                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>

                        </Grid.ColumnDefinitions>

                        <Border x:Name="checkBoxBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="1"
                                CornerRadius="3"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">

                            <Grid x:Name="markGrid">

                                <Path x:Name="optionMark"
                                      Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                      Fill="{StaticResource OptionMark.Static.Glyph}"
                                      Margin="1"
                                      Opacity="0"
                                      Stretch="None"/>

                                <Rectangle x:Name="indeterminateMark"
                                           Fill="{StaticResource OptionMark.Static.Glyph}"
                                           Margin="2"
                                           Opacity="0"/>

                            </Grid>

                        </Border>

                        <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="1"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

</ResourceDictionary>